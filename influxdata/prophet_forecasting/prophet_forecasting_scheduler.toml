# Prophet Forecasting Plugin Scheduler Configuration Template
# Copy this file to your PLUGIN_DIR (e.g., /plugins) and reference it with
#   --trigger-arguments config_file_path=<relative_path>
# Example: If the file is at /plugins/configs/prophet_forecasting_scheduler.toml, use
#   config_file_path=configs/prophet_forecasting_scheduler.toml

########## Required Parameters ##########
# InfluxDB measurement to query for historical data
# Specify the measurement name (string) from your source InfluxDB database
measurement = "your_measurement"  # e.g., "cpu_load", "temperature", "home"

# Field within the measurement to forecast
# Specify the field name (string) for forecasting
field = "your_field"  # e.g., "value", "temp"

# Historical window duration for training data
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks), m (months), q (quarters), y (years)
window = "your_window"  # e.g., "7d", "90d"

# Future duration to forecast
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks), m (months), q (quarters), y (years)
forecast_horizont = "your_forecast_horizont"  # e.g., "1h", "7d"

# Tag filters for querying specific tag values
# Format: {tag_name = tag_value, ...}
tag_values = { tag1 = "your_tag_value" }  # e.g., { room = "Kitchen" }

# Destination measurement for writing forecast results
# Specify the target measurement name (string)
target_measurement = "your_target_measurement"  # e.g., "temperature_forecast", "cpu_forecast"

# Mode of operation
# Specify "train" to train a new model for each trigger, or "predict" to load existing or train if not found
model_mode = "your_mode"  # e.g., "train", "predict"

# Unique identifier for model versioning and storage
# Specify a unique string (e.g., date_version)
unique_suffix = "your_unique_suffix"  # e.g., "20250619_v1", "20250701_v2"

########## Optional Parameters ##########
# Prophet style of seasonality
# Specify "additive" or "multiplicative"; default is "additive"
#seasonality_mode = "your_seasonality_mode"  # e.g., "additive", "multiplicative"

# Flexibility of trend changepoints
# Specify a float > 0; default is 0.05
#changepoint_prior_scale = 0.05  # e.g., 0.05

# Specific changepoint dates
# Specify a list of dates in ISO format (YYYY-MM-DD)
#changepoints = ["your_date"]  # e.g., ["2025-01-01", "2025-06-01"]

# Custom holiday dates
# Specify a space-separated list of dates in ISO format (YYYY-MM-DD)
#holiday_date_list = ["your_holiday_date"]  # e.g., ["2025-01-01", "2025-12-25"]

# Names for custom holidays
# Specify a dot-separated list matching holiday_date_list
#holiday_names = ["your_holiday_name"]  # e.g., "New Year", "Christmas"

# Built-in holiday country codes
# Specify a dot-separated list (e.g., "US.UK")
#holiday_country_names = ["your_country_code"]  # e.g., ["US", "UK"]

# Manually specified frequency
# Specify a string (e.g., "1D", "1H"); if not provided, frequency is inferred from data
#inferred_freq = "your_frequency"  # e.g., "1s", "1D"

# Duration for validation window
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks), m (months), q (quarters), y (years); default: "0s"
#validation_window = "your_validation_window"  # e.g., "3d", "10s"

# Threshold for Mean Squared Relative Error
# Specify a float; default is infinite
#msre_threshold = 0.0  # e.g., 0.05

# InfluxDB database for writing results
# Specify the target database name (string)
#target_database = "your_target_database"  # e.g., "forecast_db"

# Send alerts if validation fails
# Specify a boolean (true/false); default is "false"; requires Sender-Specific Settings if true
#is_sending_alert = false  # e.g., true

# Template for notification message on validation failure
# Use variables: $version, $measurement, $field, $start_time, $end_time, $output_measurement
# Will be used if is_sending_alert = "true"
#notification_text = "your_notification_template"  # e.g., "Validation failed for model:$version on measurement:$measurement.$field"

# Notification channels
# Specify a list of channels (strings); required if is_sending_alert = "true"
#senders = ["your_channel"]  # e.g., ["slack", "sms"]

# Custom URL path for notification sender plugin
# Specify a custom path (string); defaults to "notify" if omitted; used if is_sending_alert = "true"
#notification_path = "your_notification_path"  # e.g., "notify", "custom/notify"

# InfluxDB API token for notifications
# Specify the token (string); can also be provided via INFLUXDB3_AUTH_TOKEN environment variable
#influxdb3_auth_token = "your_api_token"  # e.g., "apiv3_AuHk_8LYFHTa1QM..."

# Override InfluxDB port for notifications
# Specify a port number (integer); defaults to 8181 if omitted
#port_override = 8181  # e.g., 8183

########## Sender-Specific Settings ##########
# For each channel listed in senders, uncomment and configure the relevant parameters below:

# --- Slack ---
# Webhook URL for Slack notifications (required)
#slack_webhook_url = "your_slack_webhook_url"  # e.g., "https://hooks.slack.com/services/T06D4..."
# Optional: Custom headers for Slack webhook (Base64-encoded JSON string)
#slack_headers = "your_slack_headers"  # e.g., "eyJIb3N0IjogImV4YW1wbGUuY29tIn0="

# --- Discord ---
# Webhook URL for Discord notifications (required)
#discord_webhook_url = "your_discord_webhook_url"  # e.g., "https://discord.com/api/webhooks/AAA/BBB"
# Optional: Custom headers for Discord webhook (Base64-encoded JSON string)
#discord_headers = "your_discord_headers"  # e.g., "eyJDb250ZW50VHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0="

# --- HTTP ---
# HTTP endpoint to send notifications (required)
#http_webhook_url = "your_http_webhook_url"  # e.g., "https://example.com/webhook"
# Optional: Custom HTTP headers (Base64-encoded JSON string)
#http_headers = "your_http_headers"  # e.g., "eyJhdXRoIjogIkJlYXJlciBZT1VSX1RPS0VOIn0="

# --- SMS (Twilio) ---
# Twilio Account SID (required, or via TWILIO_SID env var)
#twilio_sid = "your_twilio_sid"  # e.g., "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
# Twilio Auth Token (required, or via TWILIO_TOKEN env var)
#twilio_token = "your_twilio_token"  # e.g., "your_auth_token"
# Twilio sender number (required, format: +1234567890)
# twilio_from_number = "your_twilio_from_number"  # e.g., "+1234567890"
# Recipient phone number (required, format: +0987654321)
# twilio_to_number = "your_twilio_to_number"  # e.g., "+0987654321"

# --- WhatsApp (via Twilio) ---
# WhatsApp sender number (required, format: +1234567890)
#whatsapp_from_number = "your_whatsapp_from_number"  # e.g., "+1234567890"
# WhatsApp recipient number (required, format: +0987654321)
#whatsapp_to_number = "your_whatsapp_to_number"  # e.g., "+0987654321"

###### Example: Create Trigger Using This Config ######
# influxdb3 create trigger \
#   --database your_database_name \
#   --plugin-filename prophet_forecasting.py \
#   --trigger-spec "every:your_interval" \
#   --trigger-arguments config_file_path=prophet_forecasting_scheduler.toml \
#   your_trigger_name