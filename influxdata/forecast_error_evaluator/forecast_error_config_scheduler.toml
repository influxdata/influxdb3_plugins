# Forecast Error Evaluator Plugin Configuration Template
# Copy this file to your PLUGIN_DIR and reference it with
#   --trigger-arguments config_file_path=forecast_error_config_scheduler.toml

########## Required Parameters ##########
# InfluxDB measurement containing forecasted values
# Specify the measurement name (string) for forecasted data
forecast_measurement = "your_forecast_measurement"  # e.g., "forecast_data", "predictions"

# InfluxDB measurement containing actual (ground truth) values
# Specify the measurement name (string) for actual data
actual_measurement = "your_actual_measurement"  # e.g., "actual_data", "ground_truth"

# Field name in forecast_measurement for predicted values
# Specify the field name (string) for predicted values
forecast_field = "your_forecast_field"  # e.g., "predicted_temp", "forecast_value"

# Field name in actual_measurement for actual values
# Specify the field name (string) for actual values
actual_field = "your_actual_field"  # e.g., "temp", "actual_value"

# Error metric to compute
# Specify one of: "mse" (mean squared error), "mae" (mean absolute error), "rmse" (root mean squared error),
# "mape" (mean absolute percentage error), "smape" (symmetric mean absolute percentage error)
error_metric = "your_error_metric"  # e.g., "mse", "mae", "rmse", "mape", "smape"

# Time window for analysis
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks)
window = "your_window"  # e.g., "10m", "1h"

# Notification channels
# Specify a dot-separated list of notification channels (strings)
senders = ["your_channel"]  # e.g., ["slack"], ["slack", "discord"], ["http"]

# Thresholds for anomaly levels
# Dictionary mapping anomaly levels (strings) to threshold values (floats)
error_thresholds = {INFO = 1.0, WARN = 2.0, ERROR = 3.0, CRITICAL = 4.0}


########## Optional Parameters ##########
# Minimum duration for an anomaly condition before notifying
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks)
#min_condition_duration = "your_duration"  # e.g., "5m", "1h"

# Timestamp rounding frequency
# Format: <number><unit>, where unit is s (seconds), min (minutes), h (hours), d (days), w (weeks)
#rounding_freq = "your_rounding_freq"  # e.g., "1s", "10m"

# Template for notification messages
# Use variables: $measurement, $level, $field, $error, $metric, $tags
#notification_text = "your_notification_template"  # e.g., "[$level] Forecast error in $measurement.$field: $metric=$error. Tags: $tags"

# Custom URL path for notification sender plugin
# Specify a custom path (string); defaults to "notify" if omitted
#notification_path = "your_notification_path"  # e.g., "custom/notify"

# Override InfluxDB port
# Specify a port number (string); defaults to 8181 if omitted
#port_override = "your_port"  # e.g., "8182"

# InfluxDB 3 API token
# Specify the token (string); can also be provided via INFLUXDB3_AUTH_TOKEN environment variable
#influxdb3_auth_token = "your_api_token"  # e.g., "apiv3_zaHVA5iBsXe2hyqqjbx_uka..."

########## Sender-Specific Settings ##########
# For each channel listed in senders, uncomment and configure the relevant parameters below:

# --- Slack ---
# Webhook URL for Slack notifications (required for Slack)
#slack_webhook_url = "your_slack_webhook_url"  # e.g., "https://hooks.slack.com/services/T06D40..."
# Optional: Custom headers for Slack webhook (Base64-encoded JSON string)
#slack_headers = "your_slack_headers"  # e.g., "eyJIb3N0IjogImV4YW1wbGUuY29tIn0="

# --- Discord ---
# Webhook URL for Discord notifications (required for Discord)
#discord_webhook_url = "your_discord_webhook_url"  # e.g., "https://discord.com/api/webhooks/AAA/BBB"
# Optional: Custom headers for Discord webhook (Base64-encoded JSON string)
#discord_headers = "your_discord_headers"  # e.g., "eyJDb250ZW50VHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0="

# --- HTTP ---
# HTTP endpoint to send notifications (required for HTTP)
#http_webhook_url = "your_http_webhook_url"  # e.g., "https://example.com/webhook"
# Optional: Custom HTTP headers (Base64-encoded JSON string)
#http_headers = "your_http_headers"  # e.g., "eyJhdXRoIjogIkJlYXJlciBZT1VSX1RPS0VOIn0="

# --- SMS (Twilio) ---
# Twilio Account SID (required for SMS, or via TWILIO_SID env var)
#twilio_sid = "your_twilio_sid"  # e.g., "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
# Twilio Auth Token (required for SMS, or via TWILIO_TOKEN env var)
#twilio_token = "your_twilio_token"  # e.g., "your_auth_token"
# Twilio sender number (required for SMS, format: +1234567890)
#twilio_from_number = "your_twilio_from_number"  # e.g., "+1234567890"
# Recipient phone number (required for SMS, format: +0987654321)
#twilio_to_number = "your_twilio_to_number"  # e.g., "+0987654321"

# --- WhatsApp (via Twilio) ---
# WhatsApp sender number (required for WhatsApp, format: +1234567890)
#whatsapp_from_number = "your_whatsapp_from_number"  # e.g., "+1234567890"
# WhatsApp recipient number (required for WhatsApp, format: +0987654321)
#whatsapp_to_number = "your_whatsapp_to_number"  # e.g., "+0987654321"


###### Example: Create Trigger Using This Config ######
# influxdb3 create trigger \
#   --database your_database_name \
#   --plugin-filename forecast_error_evaluator.py \
#   --trigger-spec "every:your_interval" \
#   --trigger-arguments config_file_path=forecast_error_config_scheduler.toml \
#   your_trigger_name